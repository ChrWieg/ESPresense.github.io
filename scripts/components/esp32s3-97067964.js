import { R as ROM } from './rom-e5d56dd8.js';

var entry = 1077381716;
var text = "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";
var text_start = 1077379072;
var data = "ZCvKP/KNN0DcjjdAqpM3QGePN0D+jjdAZ483QMaPN0CSkDdABZE3QK2QN0B9jTdAKJA3QISQN0DpjzdAKJE3QBKQN0AokTdAyo43QCmPN0BnjzdAxo83QOKON0C+jTdA6JE3QGOTN0CajDdAiZM3QJqMN0CajDdAmow3QJqMN0CajDdAmow3QJqMN0CajDdAgpE3QJqMN0B9kjdAY5M3QA==";
var data_start = 1070279676;
var ESP32S3_STUB = {
	entry: entry,
	text: text,
	text_start: text_start,
	data: data,
	data_start: data_start
};

class ESP32S3ROM extends ROM {
    constructor() {
        super(...arguments);
        this.CHIP_NAME = "ESP32-S3";
        this.IMAGE_CHIP_ID = 9;
        this.EFUSE_BASE = 0x60007000;
        this.MAC_EFUSE_REG = this.EFUSE_BASE + 0x044;
        this.UART_CLKDIV_REG = 0x60000014;
        this.UART_CLKDIV_MASK = 0xfffff;
        this.UART_DATE_REG_ADDR = 0x60000080;
        this.FLASH_WRITE_SIZE = 0x400;
        this.BOOTLOADER_FLASH_OFFSET = 0x0;
        this.FLASH_SIZES = {
            "1MB": 0x00,
            "2MB": 0x10,
            "4MB": 0x20,
            "8MB": 0x30,
            "16MB": 0x40,
        };
        this.SPI_REG_BASE = 0x60002000;
        this.SPI_USR_OFFS = 0x18;
        this.SPI_USR1_OFFS = 0x1c;
        this.SPI_USR2_OFFS = 0x20;
        this.SPI_MOSI_DLEN_OFFS = 0x24;
        this.SPI_MISO_DLEN_OFFS = 0x28;
        this.SPI_W0_OFFS = 0x58;
        this.USB_RAM_BLOCK = 0x800;
        this.UARTDEV_BUF_NO_USB = 3;
        this.UARTDEV_BUF_NO = 0x3fcef14c;
        this.TEXT_START = ESP32S3_STUB.text_start;
        this.ENTRY = ESP32S3_STUB.entry;
        this.DATA_START = ESP32S3_STUB.data_start;
        this.ROM_DATA = ESP32S3_STUB.data;
        this.ROM_TEXT = ESP32S3_STUB.text;
    }
    async get_chip_description(loader) {
        return "ESP32-S3";
    }
    async get_chip_features(loader) {
        return ["Wi-Fi", "BLE"];
    }
    async get_crystal_freq(loader) {
        return 40;
    }
    _d2h(d) {
        const h = (+d).toString(16);
        return h.length === 1 ? "0" + h : h;
    }
    async _post_connect(loader) {
        const buf_no = (await loader.read_reg(this.UARTDEV_BUF_NO)) & 0xff;
        loader.debug("In _post_connect " + buf_no);
        if (buf_no == this.UARTDEV_BUF_NO_USB) {
            loader.ESP_RAM_BLOCK = this.USB_RAM_BLOCK;
        }
    }
    async read_mac(loader) {
        let mac0 = await loader.read_reg(this.MAC_EFUSE_REG);
        mac0 = mac0 >>> 0;
        let mac1 = await loader.read_reg(this.MAC_EFUSE_REG + 4);
        mac1 = (mac1 >>> 0) & 0x0000ffff;
        const mac = new Uint8Array(6);
        mac[0] = (mac1 >> 8) & 0xff;
        mac[1] = mac1 & 0xff;
        mac[2] = (mac0 >> 24) & 0xff;
        mac[3] = (mac0 >> 16) & 0xff;
        mac[4] = (mac0 >> 8) & 0xff;
        mac[5] = mac0 & 0xff;
        return (this._d2h(mac[0]) +
            ":" +
            this._d2h(mac[1]) +
            ":" +
            this._d2h(mac[2]) +
            ":" +
            this._d2h(mac[3]) +
            ":" +
            this._d2h(mac[4]) +
            ":" +
            this._d2h(mac[5]));
    }
    get_erase_size(offset, size) {
        return size;
    }
}

export { ESP32S3ROM };
